{
	"info": {
		"_postman_id": "sweetshop-api-collection",
		"name": "SweetShop API Collection",
		"description": "Complete API collection for SweetShop backend with all CRUD operations, search, and management endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "sweetshop-api"
	},
	"item": [
		{
			"name": "üè• Health Check",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check if the API is running and healthy"
					},
					"response": []
				}
			],
			"description": "Health check endpoints to verify API status"
		},
		{
			"name": "üç¨ Sweets Management",
			"item": [
				{
					"name": "Get All Sweets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sweets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sweets"
							]
						},
						"description": "Retrieve all sweets from the database"
					},
					"response": []
				},
				{
					"name": "Get Sweet by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sweets/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sweets",
								"1"
							]
						},
						"description": "Retrieve a specific sweet by its ID"
					},
					"response": []
				},
				{
					"name": "Create New Sweet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Chocolate Truffle\",\n  \"category\": \"Chocolate\",\n  \"price\": 2.50,\n  \"in_stock\": 25\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sweets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sweets"
							]
						},
						"description": "Create a new sweet item"
					},
					"response": []
				},
				{
					"name": "Update Sweet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Chocolate Truffle\",\n  \"category\": \"Chocolate\",\n  \"price\": 2.75,\n  \"in_stock\": 30\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sweets/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sweets",
								"1"
							]
						},
						"description": "Update an existing sweet item"
					},
					"response": []
				},
				{
					"name": "Delete Sweet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sweets/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sweets",
								"1"
							]
						},
						"description": "Delete a sweet item by ID"
					},
					"response": []
				}
						],
			"description": "Basic CRUD operations for sweets"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
} 